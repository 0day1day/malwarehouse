import utils
import os, pwd
import datetime

class MalwareSample(object):
    """malware_sample represents a piece of malware within Malwarehouse"""

    def __init__(self, sample_path, config, sample_source="", sample_notes="", yara_rules=None):
        super(MalwareSample, self).__init__()

        # Analysis charactristics
        self.analysis_datetime = str(datetime.datetime.now())
        self.analysis_user = pwd.getpwuid(os.getuid())[0]
        self.analysis_sample_directory = "" # Base directory of our content
        self.analysis_sample_location = "" # Path to the malware sample
        self.analysis_summary_location = "" # Path to the analysis report

        # File characteristics
        self.file_name = sample_path.split('/')[-1]
        self.file_mimetype = utils.get_mimetype(sample_path)
        self.file_size = 0
     
        # Hash characteristics
        self.hash_md5    = utils.get_md5(sample_path)
        self.hash_sha256 = utils.get_sha256(sample_path)

        if config.get('analysis', 'ssdeep'):
            self.hash_ssdeep = utils.get_ssdeep(sample_path)
        if not yara_rules:
            yara_rules = config.get('settings','yararules')
        # Meta characteristics
       
        self.meta_tags = utils.get_yara(sample_path, yara_rules)
        #self.meta_virustotal = [] # Impliment later
        self.meta_source = sample_source
        self.meta_notes  = sample_notes
      

    def summary(self):
        return "- %s (%s) - %s" % (self.file_name, self.meta_source, self.hash_md5)