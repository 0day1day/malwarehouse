import json
import urllib2

class VirusTotal(object):
    
    def __init__(self, apikey=""):
        self.apikey = apikey
           
    def parse(self, dictionary, indent=False):
        for k, v in dictionary.iteritems():
            if isinstance(v, dict):
                yield "[%s]"%k
                for value in self.parse(v, True):
                    yield value         
            else:
                if indent:
                    indent_char = "\t"
                else:
                    indent_char=""
                yield "%s%s: %s"%(indent_char,k,v)
                
    def get_report(self, v_total_json):
        """ Calls a recursive generator to generate a "pretty" report """
        
        virus_total_report = ""
        for parsed_data in self.parse(json.loads(v_total_json)):
            virus_total_report += "%s\n"%parsed_data
        return virus_total_report
    
    def submit_file_for_scan(self,filepath):
        pass
    
    def lookup_by_hash(self,hash):
        """ Searches the virus total db for malware information based on md5/sha256 hashes
            Returns JSON
        """
        query_dict = {}
        query_dict["endpoint"] =  "https://www.virustotal.com/vtapi/v2/file/report"
        query_dict["apikey"]   =  self.apikey
        query_dict["resource"] =  hash
        url =  "{endpoint}?apikey={apikey}&resource={resource}".format(**query_dict)     
        v_total_json = urllib2.urlopen(url).read()
        #v_total_json = open("virus_total.txt", "r").read()  
        return v_total_json

#v_total = VirusTotal("7255174d3860e8551d9edcc547e0ece6220d801caa61a4b4391ae6e10810957b")
#v_total_json = v_total.lookup_by_hash("99017f6eebbac24f351415dd410d522d")
#virus_total_report = v_total.get_report(v_total_json)
#print virus_total_report

